/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 
 *
 * OpenAPI spec version: 3.38.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.brightbankdemo.weavr.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * TransactionCancelResponse
 */

public class TransactionCancelResponse {
  /**
   * Indicates the reason why the cancel operation could not be executed. May be included in the response if the state is \&quot;ERROR\&quot;.  - \&quot;GENERIC\&quot;: A generic error has occurred. - \&quot;TRANSACTION_NOT_SCHEDULED\&quot;: The transaction is not in state SCHEDULED. - \&quot;FORBIDDEN\&quot;: The current user is not allowed to access this transaction. - \&quot;NOT_FOUND\&quot;: The transaction does not exist. 
   */
  public enum ErrorCodeEnum {
    GENERIC("GENERIC"),
    TRANSACTION_NOT_SCHEDULED("TRANSACTION_NOT_SCHEDULED"),
    FORBIDDEN("FORBIDDEN"),
    NOT_FOUND("NOT_FOUND");

    private String value;

    ErrorCodeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ErrorCodeEnum fromValue(String input) {
      for (ErrorCodeEnum b : ErrorCodeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("errorCode")
  private ErrorCodeEnum errorCode = null;

  @JsonProperty("id")
  private String id = null;

  /**
   * Gets or Sets state
   */
  public enum StateEnum {
    SUCCESS("SUCCESS"),
    ERROR("ERROR");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StateEnum fromValue(String input) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("state")
  private StateEnum state = null;

  public TransactionCancelResponse errorCode(ErrorCodeEnum errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Indicates the reason why the cancel operation could not be executed. May be included in the response if the state is \&quot;ERROR\&quot;.  - \&quot;GENERIC\&quot;: A generic error has occurred. - \&quot;TRANSACTION_NOT_SCHEDULED\&quot;: The transaction is not in state SCHEDULED. - \&quot;FORBIDDEN\&quot;: The current user is not allowed to access this transaction. - \&quot;NOT_FOUND\&quot;: The transaction does not exist. 
   * @return errorCode
  **/
  public ErrorCodeEnum getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(ErrorCodeEnum errorCode) {
    this.errorCode = errorCode;
  }

  public TransactionCancelResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the transaction.
   * @return id
  **/
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TransactionCancelResponse state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionCancelResponse TransactionCancelResponse = (TransactionCancelResponse) o;
    return Objects.equals(this.errorCode, TransactionCancelResponse.errorCode) &&
        Objects.equals(this.id, TransactionCancelResponse.id) &&
        Objects.equals(this.state, TransactionCancelResponse.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorCode, id, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionCancelResponse {\n");
    
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
