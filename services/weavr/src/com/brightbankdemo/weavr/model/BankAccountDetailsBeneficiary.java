/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 
 *
 * OpenAPI spec version: 3.38.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.brightbankdemo.weavr.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * Represent the beneficiary bank account typically used in Outgoing Wire Transfer transactions.
 */

public class BankAccountDetailsBeneficiary {
  @JsonProperty("address")
  private String address = null;

  @JsonProperty("bankAccountDetails")
  private Object bankAccountDetails = null;

  @JsonProperty("bankName")
  private String bankName = null;

  @JsonProperty("bankAddress")
  private String bankAddress = null;

  @JsonProperty("bankCountry")
  private String bankCountry = null;

  public BankAccountDetailsBeneficiary address(String address) {
    this.address = address;
    return this;
  }

   /**
   * The beneficiary&#x27;s address.
   * @return address
  **/
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public BankAccountDetailsBeneficiary bankAccountDetails(Object bankAccountDetails) {
    this.bankAccountDetails = bankAccountDetails;
    return this;
  }

   /**
   * Details of the beneficiary bank account, depending on the type of transfer chosen.
   * @return bankAccountDetails
  **/
  public Object getBankAccountDetails() {
    return bankAccountDetails;
  }

  public void setBankAccountDetails(Object bankAccountDetails) {
    this.bankAccountDetails = bankAccountDetails;
  }

  public BankAccountDetailsBeneficiary bankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

   /**
   * The beneficiary&#x27;s bank name.
   * @return bankName
  **/
  public String getBankName() {
    return bankName;
  }

  public void setBankName(String bankName) {
    this.bankName = bankName;
  }

  public BankAccountDetailsBeneficiary bankAddress(String bankAddress) {
    this.bankAddress = bankAddress;
    return this;
  }

   /**
   * The beneficiary&#x27;s bank address.
   * @return bankAddress
  **/
  public String getBankAddress() {
    return bankAddress;
  }

  public void setBankAddress(String bankAddress) {
    this.bankAddress = bankAddress;
  }

  public BankAccountDetailsBeneficiary bankCountry(String bankCountry) {
    this.bankCountry = bankCountry;
    return this;
  }

   /**
   * The beneficiary&#x27;s bank country in ISO 3166 alpha-2 format.
   * @return bankCountry
  **/
  public String getBankCountry() {
    return bankCountry;
  }

  public void setBankCountry(String bankCountry) {
    this.bankCountry = bankCountry;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankAccountDetailsBeneficiary BankAccountDetailsBeneficiary = (BankAccountDetailsBeneficiary) o;
    return Objects.equals(this.address, BankAccountDetailsBeneficiary.address) &&
        Objects.equals(this.bankAccountDetails, BankAccountDetailsBeneficiary.bankAccountDetails) &&
        Objects.equals(this.bankName, BankAccountDetailsBeneficiary.bankName) &&
        Objects.equals(this.bankAddress, BankAccountDetailsBeneficiary.bankAddress) &&
        Objects.equals(this.bankCountry, BankAccountDetailsBeneficiary.bankCountry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, bankAccountDetails, bankName, bankAddress, bankCountry);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankAccountDetailsBeneficiary {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    bankAccountDetails: ").append(toIndentedString(bankAccountDetails)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    bankAddress: ").append(toIndentedString(bankAddress)).append("\n");
    sb.append("    bankCountry: ").append(toIndentedString(bankCountry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
