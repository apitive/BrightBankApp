package com.brightbankdemo.weavrfundstransfer.service;


import com.brightbankdemo.weavrfundstransfer.model.*;
import com.brightbankdemo.weavrfundstransfer.model.BulksOutgoingWireTransfersBody;
import com.brightbankdemo.weavrfundstransfer.model.BulksSendsBody;
import com.brightbankdemo.weavrfundstransfer.model.BulksUsersBody;
import com.brightbankdemo.weavrfundstransfer.model.IdSpendRulesBody;
import com.brightbankdemo.weavrfundstransfer.model.InlineResponse201;
import com.brightbankdemo.weavrfundstransfer.model.UserIdInviteBody;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.lang.Object;
import org.springframework.util.MultiValueMap;
import feign.*;

public interface OperationsService {

  /**
   * Update spend rules for a managed card
   * Submit the details to update the spend rules of Managed Cards  The  bulkId returned in the response can subsequently be used to launch the updating of Managed Card spend rules process through &lt;Execute bulk process&gt;. A submitted bulk process can be managed (executed, accessed, paused, resumed and cancelled) by any other Authorised User of the same identity of the user that submits the details.  The status of the bulk process after execution of this operation is set to ‘SUBMITTED’. The execution of the bulk process is launched through the Execute bulk process operation.  The submission of data for a bulk process does not expire but it can be cancelled through &lt;Cancel bulk process&gt;  The system is configured to accept bulk requests to process up to a maximum of 10,000 bulk operations  Each spend rules update operation in this bulk process is processed via &lt;Managed Cards &gt; Update a Managed Card 
    * @param body  (optional)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations. Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return InlineResponse201
   */
  @RequestLine("PATCH /bulks/managed_cards/_id_/spend_rules")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  InlineResponse201 bulksManagedCardSpendRulesUpdate(List<IdSpendRulesBody> body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Create an outgoing wire transfer
   * Submit the details for the creation of a batch of Outgoing Wire Transfers.  The bulkId returned in the response can subsequently be used to launch the creation of the bulk process through _bulkIdExecute_ process. A submitted bulk process can be managed (executed, accessed, paused, resumed and cancelled) by any other Authorised User of the same identity of the user that submits the details.  The status of the bulk process after execution of this operation is set to ‘SUBMITTED’. The execution of the bulk process is launched through the Execute bulk process operation.  The submission of data for a bulk process does not expire but it can be cancelled through _bulkIdCancel_.  The system is configured to accept bulk requests to process up to a maximum of 10,000 bulk operations.  Each create Outgoing Wire Transfer operation in this bulk process is processed via _outgoingWireTransferCreate_. 
    * @param body  (optional)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations. Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return InlineResponse201
   */
  @RequestLine("POST /bulks/outgoing_wire_transfers")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  InlineResponse201 bulksOutgoingWireTransferCreate(List<BulksOutgoingWireTransfersBody> body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Create a send transaction
   * Submit the details for the creation of a batch of Sends.  The bulkId returned in the response can subsequently be used to launch the creation of the bulk process through _bulkIdExecute_ process. A submitted bulk process can be managed (executed, accessed, paused, resumed and cancelled) by any other Authorised User of the same identity of the user that submits the details.  The status of the bulk process after execution of this operation is set to ‘SUBMITTED’. The execution of the bulk process is launched through the Execute bulk process operation.  The submission of data for a bulk process does not expire but it can be cancelled through _bulkIdCancel_.  The system is configured to accept bulk requests to process up to a maximum of 10,000 bulk operations.  Each create Outgoing Wire Transfer operation in this bulk process is processed via _sendCreate_. 
    * @param body  (optional)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations. Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return InlineResponse201
   */
  @RequestLine("POST /bulks/sends")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  InlineResponse201 bulksSendCreate(List<BulksSendsBody> body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Create a user
   * Submit the details for the creation of a batch of Authorised Users   The bulkId returned in the response can subsequently be used to launch the creation of the bulk process through _bulkIdExecute_ process. A submitted bulk process can be managed (executed, accessed, paused, resumed and cancelled) by any other Authorised User of the same identity of the user that submits the details.  The status of the bulk process after execution of this operation is set to ‘SUBMITTED’. The execution of the bulk process is launched through the Execute bulk process operation.  The submission of data for a bulk process does not expire but it can be cancelled through _bulkIdCancel_  The system is configured to accept bulk requests to process up to a maximum of 10,000 bulk operations  Each create Authorised User operation in this bulk process is processed via _userCreate_ 
    * @param body  (optional)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations. Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return InlineResponse201
   */
  @RequestLine("POST /bulks/users")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  InlineResponse201 bulksUserCreate(List<BulksUsersBody> body, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Send a user invite
   * Submit the details for the creation of a batch of Authorised User invites  The  bulkId returned in the response can subsequently be used to launch the creation of the bulk process through _bulkIdExecute_. A submitted bulk process can be managed (executed, accessed, paused, resumed and cancelled) by any other Authorised User of the same identity of the user that submits the details.  The status of the bulk process after execution of this operation is set to ‘SUBMITTED’. The execution of the bulk process is launched through the Execute bulk process operation.  The submission of data for a bulk process does not expire but it can be cancelled through _bulkIdCancel_  The system is configured to accept bulk requests to process up to a maximum of 10,000 bulk operations  Each create authorised user operation in this bulk process is processed via _userInviteSend_. 
    * @param body  (optional)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations. Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   * @return InlineResponse201
   */
  @RequestLine("POST /bulks/users/_user_id_/invite")
  @Headers({
    "Content-Type: application/json",
    "Accept: application/json",
    "idempotency-ref: {idempotency_ref}"  })
  InlineResponse201 bulksUserInviteSend(List<UserIdInviteBody> body, @Param("idempotency_ref") String idempotency_ref);

}
