package com.brightbankdemo.weavrfundstransfer.service;



import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.lang.Object;
import org.springframework.util.MultiValueMap;
import feign.*;

public interface StepUpService {

  /**
   * Issue a one-time password that can be used to step-up a token
   * Initiates the step-up token process by sending an SMS with an one-time-password to a device belonging to the logged-in user that was previously enrolled through &#x60;/authentication_factors/otp/{channel}&#x60; endpoint.  This process is required for endpoints that require a step-up token to complete the call.  _Note that on the Sandbox Environment, text messages are not sent and the one-time-password is always \\\&quot;123456\\\&quot;._ 
    * @param channel The unique identifier for the channel. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations. Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /stepup/challenges/otp/{channel}")
  @Headers({
    "Content-Type: application/json",
    "Accept: ",
    "idempotency-ref: {idempotency_ref}"  })
  void stepupSCAChallenge(@Param("channel") Object channel, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Issue a push notification that can be used to step-up a token
   * Initiates the step-up token process by submitting a push notification to a device belonging to the logged-in user that was previously enrolled through the &#x60;/authentication_factors/push/{channel}&#x60; endpoint.  You should only start this process if the token step-up isn&#x27;t already in flight. 
    * @param channel  (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations. Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /stepup/challenges/push/{channel}")
  @Headers({
    "Content-Type: application/json",
    "Accept: ",
    "idempotency-ref: {idempotency_ref}"  })
  void stepupSCAChallengePush(@Param("channel") Object channel, @Param("idempotency_ref") String idempotency_ref);

  /**
   * Verify a step-up token using a one-time password
   * Completes the verification process for a step up token. The challenge expires after 5 minutes and the number of incorrect OTP attempts is limited to reduce the risk of fraud, in that case challenge has to be issued again.  _Note that on the Sandbox Environment, text messages are not sent and the &#x60;verificationCode&#x60; is always \\\&quot;123456\\\&quot;._ 
    * @param channel The unique identifier for the channel. (required)
    * @param idempotency_ref A unique call reference generated by the caller that, taking into consideration the payload as well as the operation itself, helps avoid duplicate operations. Idempotency reference uniqueness is maintained for at least 24 hours. (optional)
   */
  @RequestLine("POST /stepup/challenges/otp/{channel}/verify")
  @Headers({
    "Content-Type: application/json",
    "Accept: ",
    "idempotency-ref: {idempotency_ref}"  })
  void stepupSCAVerify(@Param("channel") Object channel, @Param("idempotency_ref") String idempotency_ref);

}
