/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 
 *
 * OpenAPI spec version: 3.53.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.brightbankdemo.weavrfundstransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * BulkProcess
 */

public class BulkProcess {
  @JsonProperty("bulkId")
  private String bulkId = null;

  @JsonProperty("submittedItemsCount")
  private Integer submittedItemsCount = null;

  @JsonProperty("status")
  private String status = null;

  public BulkProcess bulkId(String bulkId) {
    this.bulkId = bulkId;
    return this;
  }

   /**
   * The bulk id of the bulk process
   * @return bulkId
  **/
  public String getBulkId() {
    return bulkId;
  }

  public void setBulkId(String bulkId) {
    this.bulkId = bulkId;
  }

  public BulkProcess submittedItemsCount(Integer submittedItemsCount) {
    this.submittedItemsCount = submittedItemsCount;
    return this;
  }

   /**
   * The number of bulk operations in the bulk process
   * @return submittedItemsCount
  **/
  public Integer getSubmittedItemsCount() {
    return submittedItemsCount;
  }

  public void setSubmittedItemsCount(Integer submittedItemsCount) {
    this.submittedItemsCount = submittedItemsCount;
  }

  public BulkProcess status(String status) {
    this.status = status;
    return this;
  }

   /**
   * \&quot;SUBMITTED\&quot;: the data for the bulk process operations has been persisted and bulk process is ready for execution. A bulk process in this status can be executed or submitted. This is the initial state for a bulk process  \&quot;RUNNING\&quot; :  the bulk process is currently being executed by the system  \&quot;COMPLETED\&quot;  : the execution of the bulk process is complete and all bulk operations of the bulk process were executed successfully. This is a final state for the bulk process   \&quot;PARTIALLY_COMPLETED\&quot;  the execution of the bulk process is complete and some of the bulk operations of the bulk process failed. This is a final state for the bulk process  \&quot;FAILED\&quot; : none of the operations of the bulk process have executed. This is a final state for the bulk process  \&quot;PAUSED\&quot;  : the execution of bulk process has been paused through the Pause bulk process operation  Execution can be resumed through Resume bulk operation  \&quot;CANCELLED\&quot; : the execution of bulk process has been cancelled through Cancel bulk operation. This is a final state for the bulk process 
   * @return status
  **/
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkProcess BulkProcess = (BulkProcess) o;
    return Objects.equals(this.bulkId, BulkProcess.bulkId) &&
        Objects.equals(this.submittedItemsCount, BulkProcess.submittedItemsCount) &&
        Objects.equals(this.status, BulkProcess.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bulkId, submittedItemsCount, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkProcess {\n");
    
    sb.append("    bulkId: ").append(toIndentedString(bulkId)).append("\n");
    sb.append("    submittedItemsCount: ").append(toIndentedString(submittedItemsCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
