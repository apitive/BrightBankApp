/*
 * Weavr Multi Product API
 * Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 
 *
 * OpenAPI spec version: 3.53.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.brightbankdemo.weavrfundstransfer.model;

import java.util.Objects;
import java.util.Arrays;
import com.brightbankdemo.weavrfundstransfer.model.OutgoingWireTransferCreateRequestSourceInstrument;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * OutgoingWireTransferCreateRequest
 */

public class OutgoingWireTransferCreateRequest {
  @JsonProperty("scheduledTimestamp")
  private String scheduledTimestamp = null;

  @JsonProperty("profileId")
  private String profileId = null;

  @JsonProperty("transferAmount")
  private CurrencyAmount transferAmount = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("tag")
  private String tag = null;

  @JsonProperty("sourceInstrument")
  private OutgoingWireTransferCreateRequestSourceInstrument sourceInstrument = null;

  @JsonProperty("destinationBeneficiary")
  private Object destinationBeneficiary = null;

  public OutgoingWireTransferCreateRequest scheduledTimestamp(String scheduledTimestamp) {
    this.scheduledTimestamp = scheduledTimestamp;
    return this;
  }

   /**
   * Get scheduledTimestamp
   * @return scheduledTimestamp
  **/
  public String getScheduledTimestamp() {
    return scheduledTimestamp;
  }

  public void setScheduledTimestamp(String scheduledTimestamp) {
    this.scheduledTimestamp = scheduledTimestamp;
  }

  public OutgoingWireTransferCreateRequest profileId(String profileId) {
    this.profileId = profileId;
    return this;
  }

   /**
   * Get profileId
   * @return profileId
  **/
  public String getProfileId() {
    return profileId;
  }

  public void setProfileId(String profileId) {
    this.profileId = profileId;
  }

  public OutgoingWireTransferCreateRequest transferAmount(CurrencyAmount transferAmount) {
    this.transferAmount = transferAmount;
    return this;
  }

   /**
   * Get transferAmount
   * @return transferAmount
  **/
  public CurrencyAmount getTransferAmount() {
    return transferAmount;
  }

  public void setTransferAmount(CurrencyAmount transferAmount) {
    this.transferAmount = transferAmount;
  }

  public OutgoingWireTransferCreateRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * These details are passed to the beneficiary as the &#x60;reference&#x60; . This field is mandatory for wire transfers executed over &#x60;SEPA&#x60;. The allowed length is dependent on the payment type:  &#x60;SEPA&#x60; &lt;&#x3D; &#x60;35&#x60; characters. An extended character set is accepted to cater for all European languages. If &#x60;SEPA&#x60; does not support a particular character, it is automatically converted to an acceptable alternative, in line with &#x60;SEPA&#x60; scheme guidance.  &#x60;Faster Payments&#x60; &lt;&#x3D; &#x60;18&#x60; characters 
   * @return description
  **/
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OutgoingWireTransferCreateRequest tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public OutgoingWireTransferCreateRequest sourceInstrument(OutgoingWireTransferCreateRequestSourceInstrument sourceInstrument) {
    this.sourceInstrument = sourceInstrument;
    return this;
  }

   /**
   * Get sourceInstrument
   * @return sourceInstrument
  **/
  public OutgoingWireTransferCreateRequestSourceInstrument getSourceInstrument() {
    return sourceInstrument;
  }

  public void setSourceInstrument(OutgoingWireTransferCreateRequestSourceInstrument sourceInstrument) {
    this.sourceInstrument = sourceInstrument;
  }

  public OutgoingWireTransferCreateRequest destinationBeneficiary(Object destinationBeneficiary) {
    this.destinationBeneficiary = destinationBeneficiary;
    return this;
  }

   /**
   * Get destinationBeneficiary
   * @return destinationBeneficiary
  **/
  public Object getDestinationBeneficiary() {
    return destinationBeneficiary;
  }

  public void setDestinationBeneficiary(Object destinationBeneficiary) {
    this.destinationBeneficiary = destinationBeneficiary;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutgoingWireTransferCreateRequest OutgoingWireTransferCreateRequest = (OutgoingWireTransferCreateRequest) o;
    return Objects.equals(this.scheduledTimestamp, OutgoingWireTransferCreateRequest.scheduledTimestamp) &&
        Objects.equals(this.profileId, OutgoingWireTransferCreateRequest.profileId) &&
        Objects.equals(this.transferAmount, OutgoingWireTransferCreateRequest.transferAmount) &&
        Objects.equals(this.description, OutgoingWireTransferCreateRequest.description) &&
        Objects.equals(this.tag, OutgoingWireTransferCreateRequest.tag) &&
        Objects.equals(this.sourceInstrument, OutgoingWireTransferCreateRequest.sourceInstrument) &&
        Objects.equals(this.destinationBeneficiary, OutgoingWireTransferCreateRequest.destinationBeneficiary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduledTimestamp, profileId, transferAmount, description, tag, sourceInstrument, destinationBeneficiary);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutgoingWireTransferCreateRequest {\n");
    
    sb.append("    scheduledTimestamp: ").append(toIndentedString(scheduledTimestamp)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    transferAmount: ").append(toIndentedString(transferAmount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    sourceInstrument: ").append(toIndentedString(sourceInstrument)).append("\n");
    sb.append("    destinationBeneficiary: ").append(toIndentedString(destinationBeneficiary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
